@page "/wiki/scrum-vs-kanban"

@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudPaper Class="px-6 py-4 ma-2" Elevation="4">
    <MudText Typo="Typo.h4">Comparing Software Development Methodologies</MudText>
    <MudText Typo="Typo.h5" Class="mt-4">Scrum vs. Kanban</MudText>
    <MudText Typo="Typo.body1" Class="mb-4">Scrum and Kanban are both popular frameworks within Agile, aimed at improving efficiency and delivering value incrementally, but they have different approaches.</MudText>

    <MudExpansionPanels>
        <MudExpansionPanel Text="Scrum" Expanded="false">
            <MudList T="string" Class="pl-4">
                <MudListItem>• Structured Sprints: Scrum is organized around fixed-length sprints (e.g., two weeks), with defined roles (Product Owner, Scrum Master, Developers) and ceremonies (Sprint Planning, Daily Scrum, Sprint Review, Sprint Retrospective).</MudListItem>
                <MudListItem>
                    • Strengths:
                    <MudList T="string" Class="pl-4">
                        <MudListItem>- Clearly defined roles and responsibilities</MudListItem>
                        <MudListItem>- Regular cadence promotes predictability</MudListItem>
                        <MudListItem>- Structured framework offers guidance</MudListItem>
                    </MudList>
                </MudListItem>
                <MudListItem>
                    • Weaknesses:
                    <MudList T="string" Class="pl-4">
                        <MudListItem>- Can be rigid if not implemented flexibly</MudListItem>
                        <MudListItem>- Fixed sprints may not suit all work types</MudListItem>
                    </MudList>
                </MudListItem>
                <MudListItem>• Ideal Use Cases: Teams working on complex projects with defined scopes and regular delivery cycles. Examples: Software product development, projects with multiple workstreams.</MudListItem>
            </MudList>
        </MudExpansionPanel>

        <MudExpansionPanel Text="Kanban" Expanded="false">
            <MudList T="string" Class="pl-4">
                <MudListItem>• Continuous Flow: Kanban focuses on visualizing workflow and managing work-in-progress (WIP) to optimize the flow.</MudListItem>
                <MudListItem>
                    • Strengths:
                    <MudList T="string" Class="pl-4">
                        <MudListItem>- Flexibility to adapt to changing priorities</MudListItem>
                        <MudListItem>- Visualizes workflow and bottlenecks, enhancing transparency</MudListItem>
                        <MudListItem>- Focus on continuous improvement</MudListItem>
                    </MudList>
                </MudListItem>
                <MudListItem>
                    • Weaknesses:
                    <MudList T="string" Class="pl-4">
                        <MudListItem>- Lack of defined structure can be challenging for some teams</MudListItem>
                        <MudListItem>- Requires discipline to manage WIP limits effectively</MudListItem>
                        <MudListItem>- May not provide enough predictability for certain projects</MudListItem>
                    </MudList>
                </MudListItem>
                <MudListItem>• Ideal Use Cases: Teams managing the flow of work, optimizing processes, and responding to changing demands. Examples: IT support, maintenance, and customer service.</MudListItem>
            </MudList>
        </MudExpansionPanel>
    </MudExpansionPanels>

    <MudText Typo="Typo.h5" Class="mt-4">Real-World Scenarios</MudText>
    <MudList T="string" Class="pl-4">
        <MudListItem>• Scrum Example: A software team building a new mobile application can use Scrum to break down the project into manageable sprints, deliver working features regularly, and adapt to changing requirements based on user feedback.</MudListItem>
        <MudListItem>• Kanban Example: An IT support team can use a Kanban board to visualize support tickets, prioritize urgent issues, and efficiently manage workloads. Setting WIP limits helps technicians avoid being overwhelmed, leading to quicker resolutions and better customer satisfaction.</MudListItem>
    </MudList>

    <MudText Typo="Typo.h5" Class="mt-4">Leveraging Tools for Agile Frameworks</MudText>
    <MudText Typo="Typo.body1" Class="mb-4">Tools like Jira Software can help teams implement and manage Agile frameworks like Scrum and Kanban. By using features like Scrum and Kanban boards, teams can tailor these frameworks to their specific workflows, enhancing their ability to deliver value effectively.</MudText>
</MudPaper>